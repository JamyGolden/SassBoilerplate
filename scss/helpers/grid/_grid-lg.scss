// ==========================================================================
// Large Grid
// ==========================================================================

$lg-gutter: 10px; // Grid padding or gutter
$md-gutter: $lg-gutter; // Allows for thinner SM gutter
$sm-gutter: $lg-gutter; // Allows for thinner SM gutter
$xs-gutter: $lg-gutter; // Allows for thinner XS gutter
$vertical-gutter: true; // Allow a top/bottom gutter
$gd-column-total: 12; // Total number columns available

.gd-lg {
	@extend .gd-cf;
	padding: 0 $xs-gutter;

	@include bp(sm) {
		padding: 0 $sm-gutter;
	}

	@include bp(md) {
		padding: 0 $md-gutter;
	}

	@include bp(md) {
		padding: 0 $lg-gutter;
	}

	.gd-row {
		@extend .gd-cf;
		margin-left: -$xs-gutter;
		margin-right: -$xs-gutter;

		@include bp(sm) {
			margin-left: -$sm-gutter;
			margin-right: -$sm-gutter;
		}

		@include bp(md) {
			margin-left: -$md-gutter;
			margin-right: -$md-gutter;
		}

		@include bp(lg) {
			margin-left: -$lg-gutter;
			margin-right: -$lg-gutter;
		}

		& > .gd-cell {
			@include box-sizing(border-box);
			float: left;
			padding-left: $xs-gutter;
			padding-right: $xs-gutter;

			@if $vertical-gutter == true {
				margin-top: $xs-gutter;
				margin-bottom: $xs-gutter;
			}

			@include bp(sm) {
				padding-left: $sm-gutter;
				padding-right: $sm-gutter;

				@if $vertical-gutter == true {
					margin-top: $sm-gutter;
					margin-bottom: $sm-gutter;
				}
			}

			@include bp(md) {
				padding-left: $md-gutter;
				padding-right: $md-gutter;

				@if $vertical-gutter == true {
					margin-top: $md-gutter;
					margin-bottom: $md-gutter;
				}
			}

			@include bp(lg) {
				padding-left: $lg-gutter;
				padding-right: $lg-gutter;

				@if $vertical-gutter == true {
					margin-top: $lg-gutter;
					margin-bottom: $lg-gutter;
				}
			}
		}
	}
}


	@for $i from 2 through $gd-column-total {
		$gd-columns: $i;

		.gd-lg--#{$i}col {
			& > .gd-row > .gd-cell {
				width: 100%;

				@include bp(lg) {
					width: 100% / $gd-columns;
				}
			}

			@for $i from 2 through $gd-columns {
				& > .gd-row > .gd-cell--#{$i}col {
					width: 100%;

					@include bp(lg) {
						width: grid-cell-width($gd-columns, $i);
					}
				}
			}
		}
	} // @for